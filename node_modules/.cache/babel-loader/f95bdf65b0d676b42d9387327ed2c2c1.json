{"ast":null,"code":"var _jsxFileName = \"/home/henicannn/personal/iconect_test/src/components/DropBox/DropBox.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { ReactComponent as UploadIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/images/cloud-upload.svg\";\nimport axios from 'axios';\nimport \"./DropBox.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DropBox() {\n  _s();\n\n  const [selectFiles, setSelectFiles] = useState([]);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [validFiles, setValidFiles] = useState([]);\n  const [unsupportedFiles, setUnsupportedFiles] = useState([]);\n  const fileInputRef = useRef();\n  const uploadModalRef = useRef();\n  const uploadRef = useRef();\n  const progressRef = useRef();\n\n  const dragOver = e => {\n    e.preventDefault();\n  };\n\n  const dragEnter = e => {\n    e.preventDefault();\n  };\n\n  const dragLeave = e => {\n    e.preventDefault();\n  };\n\n  const handleFiles = files => {\n    for (let i = 0; i < files.length; i++) {\n      setSelectFiles(prevArray => [...prevArray, files[i]]);\n    }\n  };\n\n  const fileDrop = e => {\n    e.preventDefault();\n    const files = e.dataTransfer.files;\n\n    if (files.length) {\n      handleFiles(files);\n    }\n  };\n\n  const fileSize = size => {\n    if (size === 0) {\n      return \"0 Bytes\";\n    }\n\n    const k = 1024;\n    const sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\", \"TB\"];\n    const i = Math.floor(Math.log(size) / Math.log(k));\n    return parseFloat((size / Math.pow(k, i)).toFixed(2)) + \" \" + sizes[i];\n  };\n\n  const fileType = fileName => {\n    return fileName.substring(fileName.lastIndexOf(\".\") + 1, fileName.length) || fileName;\n  };\n\n  const removeFile = name => {\n    const index = validFiles.findIndex(e => e.name === name);\n    const index2 = selectFiles.findIndex(e => e.name === name);\n    const index3 = unsupportedFiles.findIndex(e => e.name === name);\n    validFiles.splice(index, 1);\n    selectFiles.splice(index2, 1);\n    setValidFiles([...validFiles]);\n    setSelectFiles([...selectFiles]);\n\n    if (index3 !== -1) {\n      unsupportedFiles.splice(index3, 1);\n      setUnsupportedFiles([...unsupportedFiles]);\n    }\n  };\n\n  useEffect(() => {\n    let filteredArray = selectFiles.reduce((file, current) => {\n      const x = file.find(item => item.name === current.name);\n\n      if (!x) {\n        return file.concat([current]);\n      } else {\n        return file;\n      }\n    }, []);\n    setValidFiles([...filteredArray]);\n  }, [selectFiles]);\n\n  const fileInputClicked = () => {\n    fileInputRef.current.click();\n  };\n\n  const filesSelected = () => {\n    if (fileInputRef.current.files.length) {\n      handleFiles(fileInputRef.current.files);\n    }\n  };\n\n  const uploadFiles = () => {\n    uploadModalRef.current.style.display = \"block\";\n    uploadRef.current.innerHTML = \"File(s) Uploading...\";\n\n    for (let i = 0; i < validFiles.length; i++) {\n      const formData = new FormData();\n      formData.append(\"file\", validFiles[i]);\n      axios.post('//localhost:8000/upload', formData, {\n        onUploadProgress: progressEvent => {\n          const uploadPercentage = Math.floor(progressEvent.loaded / progressEvent.total * 100);\n          progressRef.current.innerHTML = `${uploadPercentage}%`;\n          progressRef.current.style.width = `${uploadPercentage}%`;\n\n          if (uploadPercentage === 100) {\n            uploadRef.current.innerHTML = 'File(s) Uploaded';\n            validFiles.length = 0;\n            setValidFiles([...validFiles]);\n            setSelectFiles([...validFiles]);\n            setUnsupportedFiles([...validFiles]);\n          }\n        }\n      }).then(e => {\n        console.log('Success');\n      }).catch(err => {\n        console.log('Error', err);\n        uploadRef.current.innerHTML = `<span class=\"error\">Error Uploading File(s)</span>`;\n        progressRef.current.style.backgroundColor = 'red';\n      });\n    }\n  };\n\n  const closeUploadModal = () => {\n    uploadModalRef.current.style.display = \"none\";\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"DropBox\",\n    children: [unsupportedFiles.length === 0 && validFiles.length ? /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"DropBox-btn\",\n      onClick: () => uploadFiles(),\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }, this) : \"\", unsupportedFiles.length ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please remove all unsupported files.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }, this) : \"\", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"DropBox__container\",\n      onDragOver: dragOver,\n      onDragEnter: dragEnter,\n      onDragLeave: dragLeave,\n      onDrop: fileDrop,\n      onClick: fileInputClicked,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"DropBox__container-message\",\n        children: [/*#__PURE__*/_jsxDEV(UploadIcon, {\n          className: \"DropBox__container-message-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Drag & Drop files here or click to upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: fileInputRef,\n        className: \"DropBox__container-input\",\n        type: \"file\",\n        multiple: true,\n        onChange: filesSelected\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"DropBox__file\",\n        children: validFiles.map((data, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"DropBox__file-status\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: !data.invalid ? () => openImageModal(data) : () => removeFile(data.name),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"DropBox__file-type\",\n              children: fileType(data.name)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `DropBox__file-name ${data.invalid ? \"file-error\" : \"\"}`,\n              children: data.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"DropBox__file-size\",\n              children: [\"(\", fileSize(data.size), \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 17\n            }, this), data.invalid && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"DropBox__file-error-message\",\n              children: [\"(\", errorMessage, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"DropBox__file-remove\",\n            onClick: () => removeFile(data.name),\n            children: \"X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 15\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"DropBox__upload-modal\",\n      ref: uploadModalRef,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"DropBox__upload-overlay\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"close\",\n        onClick: () => closeUploadModal(),\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"DropBox__upload-progress-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          ref: uploadRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"DropBox__progress\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"DropBox__upload-progress-bar\",\n            ref: progressRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DropBox, \"g8N+04dbhmDdwKvkoYVY2xU9iiI=\");\n\n_c = DropBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"DropBox\");","map":{"version":3,"sources":["/home/henicannn/personal/iconect_test/src/components/DropBox/DropBox.jsx"],"names":["React","useState","useEffect","useRef","axios","DropBox","selectFiles","setSelectFiles","errorMessage","setErrorMessage","validFiles","setValidFiles","unsupportedFiles","setUnsupportedFiles","fileInputRef","uploadModalRef","uploadRef","progressRef","dragOver","e","preventDefault","dragEnter","dragLeave","handleFiles","files","i","length","prevArray","fileDrop","dataTransfer","fileSize","size","k","sizes","Math","floor","log","parseFloat","pow","toFixed","fileType","fileName","substring","lastIndexOf","removeFile","name","index","findIndex","index2","index3","splice","filteredArray","reduce","file","current","x","find","item","concat","fileInputClicked","click","filesSelected","uploadFiles","style","display","innerHTML","formData","FormData","append","post","onUploadProgress","progressEvent","uploadPercentage","loaded","total","width","then","console","catch","err","backgroundColor","closeUploadModal","map","data","invalid","openImageModal"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { ReactComponent as UploadIcon } from \"../../assets/images/cloud-upload.svg\";\nimport axios from 'axios';\nimport \"./DropBox.scss\";\n\nexport default function DropBox() {\n  const [selectFiles, setSelectFiles] = useState([]);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [validFiles, setValidFiles] = useState([]);\n  const [unsupportedFiles, setUnsupportedFiles] = useState([]);\n\n  const fileInputRef = useRef();\n  const uploadModalRef = useRef();\n  const uploadRef = useRef();\n  const progressRef = useRef();\n\n  const dragOver = (e) => {\n    e.preventDefault();\n  };\n\n  const dragEnter = (e) => {\n    e.preventDefault();\n  };\n\n  const dragLeave = (e) => {\n    e.preventDefault();\n  };\n\n  const handleFiles = (files) => {\n    for (let i = 0; i < files.length; i++) {\n      setSelectFiles((prevArray) => [...prevArray, files[i]]);\n    }\n  };\n\n  const fileDrop = (e) => {\n    e.preventDefault();\n    const files = e.dataTransfer.files;\n    if (files.length) {\n      handleFiles(files);\n    }\n  };\n\n  const fileSize = (size) => {\n    if (size === 0) {\n      return \"0 Bytes\";\n    }\n    const k = 1024;\n    const sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\", \"TB\"];\n    const i = Math.floor(Math.log(size) / Math.log(k));\n    return parseFloat((size / Math.pow(k, i)).toFixed(2)) + \" \" + sizes[i];\n  };\n\n  const fileType = (fileName) => {\n    return (\n      fileName.substring(fileName.lastIndexOf(\".\") + 1, fileName.length) ||\n      fileName\n    );\n  };\n\n  const removeFile = (name) => {\n    const index = validFiles.findIndex((e) => e.name === name);\n    const index2 = selectFiles.findIndex((e) => e.name === name);\n    const index3 = unsupportedFiles.findIndex((e) => e.name === name);\n    validFiles.splice(index, 1);\n    selectFiles.splice(index2, 1);\n    setValidFiles([...validFiles]);\n    setSelectFiles([...selectFiles]);\n    if (index3 !== -1) {\n      unsupportedFiles.splice(index3, 1);\n      setUnsupportedFiles([...unsupportedFiles]);\n    }\n  };\n\n  useEffect(() => {\n    let filteredArray = selectFiles.reduce((file, current) => {\n      const x = file.find((item) => item.name === current.name);\n      if (!x) {\n        return file.concat([current]);\n      } else {\n        return file;\n      }\n    }, []);\n    setValidFiles([...filteredArray]);\n  }, [selectFiles]);\n\n  const fileInputClicked = () => {\n    fileInputRef.current.click();\n  };\n\n  const filesSelected = () => {\n    if (fileInputRef.current.files.length) {\n      handleFiles(fileInputRef.current.files);\n    }\n  };\n\n  const uploadFiles = () => {\n    uploadModalRef.current.style.display = \"block\";\n    uploadRef.current.innerHTML = \"File(s) Uploading...\";\n    for (let i = 0; i < validFiles.length; i++) {\n      const formData = new FormData();\n      formData.append(\"file\", validFiles[i]);\n      axios.post('//localhost:8000/upload', formData, {\n            onUploadProgress: (progressEvent) => {\n                const uploadPercentage = Math.floor((progressEvent.loaded / progressEvent.total) * 100);\n                progressRef.current.innerHTML = `${uploadPercentage}%`;\n                progressRef.current.style.width = `${uploadPercentage}%`;\n                if (uploadPercentage === 100) {\n                    uploadRef.current.innerHTML = 'File(s) Uploaded';\n                    validFiles.length = 0;\n                    setValidFiles([...validFiles]);\n                    setSelectFiles([...validFiles]);\n                    setUnsupportedFiles([...validFiles]);\n                }\n            }\n        })\n      .then((e) => {\n        console.log('Success');\n      })\n      .catch((err) => {\n        console.log('Error', err)\n        uploadRef.current.innerHTML = `<span class=\"error\">Error Uploading File(s)</span>`;\n        progressRef.current.style.backgroundColor = 'red';\n      })\n    }\n  };\n\n  const closeUploadModal = () => {\n    uploadModalRef.current.style.display = \"none\";\n  };\n\n  return (\n    <div className=\"DropBox\">\n      {unsupportedFiles.length === 0 && validFiles.length ? (\n        <button className=\"DropBox-btn\" onClick={() => uploadFiles()}>\n          Upload\n        </button>\n      ) : (\n        \"\"\n      )}\n      {unsupportedFiles.length ? (\n        <p>Please remove all unsupported files.</p>\n      ) : (\n        \"\"\n      )}\n      <div\n        className=\"DropBox__container\"\n        onDragOver={dragOver}\n        onDragEnter={dragEnter}\n        onDragLeave={dragLeave}\n        onDrop={fileDrop}\n        onClick={fileInputClicked}\n      >\n        <div className=\"DropBox__container-message\">\n          <UploadIcon className=\"DropBox__container-message-icon\" />\n          <p>Drag & Drop files here or click to upload</p>\n        </div>\n        <input\n          ref={fileInputRef}\n          className=\"DropBox__container-input\"\n          type=\"file\"\n          multiple\n          onChange={filesSelected}\n        />\n      </div>\n      <div>\n        <div className=\"DropBox__file\">\n          {validFiles.map((data, i) => (\n            <div className=\"DropBox__file-status\" key={i}>\n              <div\n                onClick={\n                  !data.invalid\n                    ? () => openImageModal(data)\n                    : () => removeFile(data.name)\n                }\n              >\n                <div className=\"DropBox__file-type\">{fileType(data.name)}</div>\n                <span\n                  className={`DropBox__file-name ${\n                    data.invalid ? \"file-error\" : \"\"\n                  }`}\n                >\n                  {data.name}\n                </span>\n                <span className=\"DropBox__file-size\">\n                  ({fileSize(data.size)})\n                </span>\n                {data.invalid && (\n                  <span className=\"DropBox__file-error-message\">\n                    ({errorMessage})\n                  </span>\n                )}\n              </div>\n              <div\n                className=\"DropBox__file-remove\"\n                onClick={() => removeFile(data.name)}\n              >\n                X\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n      <div className=\"DropBox__upload-modal\" ref={uploadModalRef}>\n        <div className=\"DropBox__upload-overlay\"></div>\n        <div className=\"close\" onClick={() => closeUploadModal()}>\n          X\n        </div>\n        <div className=\"DropBox__upload-progress-container\">\n          <span ref={uploadRef}></span>\n          <div className=\"DropBox__progress\">\n            <div\n              className=\"DropBox__upload-progress-bar\"\n              ref={progressRef}\n            ></div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}