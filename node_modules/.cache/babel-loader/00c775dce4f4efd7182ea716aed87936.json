{"ast":null,"code":"var _jsxFileName = \"/home/henicannn/personal/iconect_test/src/components/DropBox/DropBox.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { ReactComponent as UploadIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/images/cloud-upload.svg\";\nimport \"./DropBox.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DropBox() {\n  _s();\n\n  const [selectFiles, setSelectFiles] = useState([]);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [validFiles, setValidFiles] = useState([]);\n\n  const dragOver = e => {\n    e.preventDefault();\n  };\n\n  const dragEnter = e => {\n    e.preventDefault();\n  };\n\n  const dragLeave = e => {\n    e.preventDefault();\n  };\n\n  const handleFiles = files => {\n    for (let i = 0; i < files.length; i++) {\n      if (validateFile(files[i])) {\n        setSelectFiles(prevArray => [...prevArray, files[i]]);\n      } else {\n        files[i][\"invalid\"] = true;\n        setSelectFiles(prevArray => [...prevArray, files[i]]);\n        setErrorMessage(\"File type not permitted\"); // setUnsupportedFiles((prevArray) => [...prevArray, files[i]]);\n      }\n    }\n  };\n\n  const fileDrop = e => {\n    e.preventDefault();\n    const files = e.dataTransfer.files;\n\n    if (files.length) {\n      handleFiles(files);\n    }\n  };\n\n  const validateFile = file => {\n    const validTypes = [\"image/jpeg\", \"image/jpg\", \"image/png\", \"image/gif\", \"image/x-icon\"];\n\n    if (validTypes.indexOf(file.type) === -1) {\n      return false;\n    }\n\n    return true;\n  };\n\n  const fileSize = size => {\n    if (size === 0) {\n      return \"0 Bytes\";\n    }\n\n    const k = 1024;\n    const sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\", \"TB\"];\n    const i = Math.floor(Math.log(size) / Math.log(k));\n    return parseFloat((size / Math.pow(k, i)).toFixed(2)) + \" \" + sizes[i];\n  };\n\n  const fileType = fileName => {\n    return fileName.substring(fileName.lastIndexOf(\".\") + 1, fileName.length) || fileName;\n  };\n\n  const removeFile = name => {\n    const index = validFiles.findIndex(e => e.name === name);\n    const index2 = selectFiles.findIndex(e => e.name === name);\n    const index3 = unsupportedFiles.findIndex(e => e.name === name);\n    validFiles.splice(index, 1);\n    selectFiles.splice(index2, 1);\n    setValidFiles([...validFiles]);\n    setSelectFiles([...selectFiles]);\n\n    if (index3 !== -1) {\n      unsupportedFiles.splice(index3, 1);\n      setUnsupportedFiles([...unsupportedFiles]);\n    }\n  };\n\n  useEffect(() => {\n    let filteredArray = selectFiles.reduce((file, current) => {\n      const x = file.find(item => item.name === current.name);\n\n      if (!x) {\n        return file.concat([current]);\n      } else {\n        return file;\n      }\n    }, []);\n    setValidFiles([...filteredArray]);\n  }, [selectFiles]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"DropBox\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"DropBox__container\",\n      onDragOver: dragOver,\n      onDragEnter: dragEnter,\n      onDragLeave: dragLeave,\n      onDrop: fileDrop,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"DropBox__container-message\",\n        children: [/*#__PURE__*/_jsxDEV(UploadIcon, {\n          className: \"DropBox__container-message-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Drag & Drop files here or click to upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"DropBox__file\",\n        children: validFiles.map((data, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"DropBox__file-status\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: !data.invalid ? () => openImageModal(data) : () => removeFile(data.name),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"DropBox__file-type\",\n              children: fileType(data.name)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: `DropBox__file-name ${data.invalid ? \"file-error\" : \"\"}`,\n              children: data.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"DropBox__file-size\",\n              children: [\"(\", fileSize(data.size), \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 17\n            }, this), data.invalid && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"DropBox__file-error-message\",\n              children: [\"(\", errorMessage, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"DropBox__file-remove\",\n            onClick: () => removeFile(data.name),\n            children: \"X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 15\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DropBox, \"C+wQdsTGg5Q8M9oAsSfhLaZcus4=\");\n\n_c = DropBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"DropBox\");","map":{"version":3,"sources":["/home/henicannn/personal/iconect_test/src/components/DropBox/DropBox.jsx"],"names":["React","useState","useEffect","DropBox","selectFiles","setSelectFiles","errorMessage","setErrorMessage","validFiles","setValidFiles","dragOver","e","preventDefault","dragEnter","dragLeave","handleFiles","files","i","length","validateFile","prevArray","fileDrop","dataTransfer","file","validTypes","indexOf","type","fileSize","size","k","sizes","Math","floor","log","parseFloat","pow","toFixed","fileType","fileName","substring","lastIndexOf","removeFile","name","index","findIndex","index2","index3","unsupportedFiles","splice","setUnsupportedFiles","filteredArray","reduce","current","x","find","item","concat","map","data","invalid","openImageModal"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { ReactComponent as UploadIcon } from \"../../assets/images/cloud-upload.svg\";\nimport \"./DropBox.scss\";\n\nexport default function DropBox() {\n  const [selectFiles, setSelectFiles] = useState([]);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [validFiles, setValidFiles] = useState([]);\n\n  const dragOver = (e) => {\n    e.preventDefault();\n  };\n\n  const dragEnter = (e) => {\n    e.preventDefault();\n  };\n\n  const dragLeave = (e) => {\n    e.preventDefault();\n  };\n\n  const handleFiles = (files) => {\n    for (let i = 0; i < files.length; i++) {\n      if (validateFile(files[i])) {\n        setSelectFiles((prevArray) => [...prevArray, files[i]]);\n      } else {\n        files[i][\"invalid\"] = true;\n        setSelectFiles((prevArray) => [...prevArray, files[i]]);\n        setErrorMessage(\"File type not permitted\");\n        // setUnsupportedFiles((prevArray) => [...prevArray, files[i]]);\n      }\n    }\n  };\n\n  const fileDrop = (e) => {\n    e.preventDefault();\n    const files = e.dataTransfer.files;\n    if (files.length) {\n      handleFiles(files);\n    }\n  };\n\n  const validateFile = (file) => {\n    const validTypes = [\n      \"image/jpeg\",\n      \"image/jpg\",\n      \"image/png\",\n      \"image/gif\",\n      \"image/x-icon\",\n    ];\n    if (validTypes.indexOf(file.type) === -1) {\n      return false;\n    }\n    return true;\n  };\n\n  const fileSize = (size) => {\n    if (size === 0) {\n      return \"0 Bytes\";\n    }\n    const k = 1024;\n    const sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\", \"TB\"];\n    const i = Math.floor(Math.log(size) / Math.log(k));\n    return parseFloat((size / Math.pow(k, i)).toFixed(2)) + \" \" + sizes[i];\n  };\n\n  const fileType = (fileName) => {\n    return (\n      fileName.substring(fileName.lastIndexOf(\".\") + 1, fileName.length) ||\n      fileName\n    );\n  };\n  \n  const removeFile = (name) => {\n    const index = validFiles.findIndex(e => e.name === name);\n    const index2 = selectFiles.findIndex(e => e.name === name);\n    const index3 = unsupportedFiles.findIndex(e => e.name === name);\n    validFiles.splice(index, 1);\n    selectFiles.splice(index2, 1);\n    setValidFiles([...validFiles]);\n    setSelectFiles([...selectFiles]);\n    if (index3 !== -1) {\n        unsupportedFiles.splice(index3, 1);\n        setUnsupportedFiles([...unsupportedFiles]);\n    }\n}\n\n  useEffect(() => {\n    let filteredArray = selectFiles.reduce((file, current) => {\n      const x = file.find((item) => item.name === current.name);\n      if (!x) {\n        return file.concat([current]);\n      } else {\n        return file;\n      }\n    }, []);\n    setValidFiles([...filteredArray]);\n  }, [selectFiles]);\n\n  return (\n    <div className=\"DropBox\">\n      <div\n        className=\"DropBox__container\"\n        onDragOver={dragOver}\n        onDragEnter={dragEnter}\n        onDragLeave={dragLeave}\n        onDrop={fileDrop}\n      >\n        <div className=\"DropBox__container-message\">\n          <UploadIcon className=\"DropBox__container-message-icon\" />\n          <p>Drag & Drop files here or click to upload</p>\n        </div>\n      </div>\n      <div>\n        <div className=\"DropBox__file\">\n          {validFiles.map((data, i) => (\n            <div className=\"DropBox__file-status\" key={i}>\n              <div\n                onClick={\n                  !data.invalid\n                    ? () => openImageModal(data)\n                    : () => removeFile(data.name)\n                }\n              >\n                <div className=\"DropBox__file-type\">{fileType(data.name)}</div>\n                <span\n                  className={`DropBox__file-name ${\n                    data.invalid ? \"file-error\" : \"\"\n                  }`}\n                >\n                  {data.name}\n                </span>\n                <span className=\"DropBox__file-size\">\n                  ({fileSize(data.size)})\n                </span>\n                {data.invalid && (\n                  <span className=\"DropBox__file-error-message\">\n                    ({errorMessage})\n                  </span>\n                )}\n              </div>\n              <div className=\"DropBox__file-remove\" onClick={() => removeFile(data.name)}>X</div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}