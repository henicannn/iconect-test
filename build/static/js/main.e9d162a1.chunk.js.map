{"version":3,"sources":["components/FilesUploader/FilesUploader.jsx","assets/images/cloud-upload.svg","components/DropBox/DropBox.jsx","App.jsx","index.jsx"],"names":["FilesUploader","className","_path","_excluded","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgCloudUpload","_ref","svgRef","title","titleId","props","width","height","viewBox","xmlns","ref","id","d","ForwardRef","DropBox","useState","selectFiles","setSelectFiles","errorMessage","validFiles","setValidFiles","unsupportedFiles","setUnsupportedFiles","fileInputRef","useRef","uploadModalRef","uploadRef","progressRef","handleFiles","files","prevArray","fileSize","size","Math","floor","log","parseFloat","pow","toFixed","removeFile","name","index","findIndex","e","index2","index3","splice","useEffect","filteredArray","reduce","file","current","find","item","concat","onClick","style","display","innerHTML","formData","FormData","append","axios","post","onUploadProgress","progressEvent","uploadPercentage","loaded","total","setTimeout","then","console","catch","err","uploadFiles","onDragOver","preventDefault","onDragEnter","onDragLeave","onDrop","dataTransfer","click","type","multiple","onChange","map","data","invalid","openImageModal","fileName","substring","lastIndexOf","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e9d162a1.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"./FilesUploader.scss\";\n\nexport default function FilesUploader() {\n  return (\n    <div className=\"FilesUploader\">\n      <p className=\"FilesUploader__title\">React Drag and Drop Image Upload</p>\n      <div className=\"FilesUploader__content\"></div>\n    </div>\n  );\n}\n","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgCloudUpload(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 1792,\n    height: 1792,\n    viewBox: \"0 0 1792 1792\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1216 864q0-14-9-23l-352-352q-9-9-23-9t-23 9l-351 351q-10 12-10 24 0 14 9 23t23 9h224v352q0 13 9.5 22.5t22.5 9.5h192q13 0 22.5-9.5t9.5-22.5v-352h224q13 0 22.5-9.5t9.5-22.5zm640 288q0 159-112.5 271.5t-271.5 112.5h-1088q-185 0-316.5-131.5t-131.5-316.5q0-130 70-240t188-165q-2-30-2-43 0-212 150-362t362-150q156 0 285.5 87t188.5 231q71-62 166-62 106 0 181 75t75 181q0 76-41 138 130 31 213.5 135.5t83.5 238.5z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgCloudUpload);\nexport default __webpack_public_path__ + \"static/media/cloud-upload.64b438c0.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState, useEffect, useRef } from \"react\";\nimport { ReactComponent as UploadIcon } from \"../../assets/images/cloud-upload.svg\";\nimport axios from 'axios';\nimport \"./DropBox.scss\";\n\nexport default function DropBox() {\n  const [selectFiles, setSelectFiles] = useState([]);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [validFiles, setValidFiles] = useState([]);\n  const [unsupportedFiles, setUnsupportedFiles] = useState([]);\n\n  const fileInputRef = useRef();\n  const uploadModalRef = useRef();\n  const uploadRef = useRef();\n  const progressRef = useRef();\n\n  const dragOver = (e) => {\n    e.preventDefault();\n  };\n\n  const dragEnter = (e) => {\n    e.preventDefault();\n  };\n\n  const dragLeave = (e) => {\n    e.preventDefault();\n  };\n\n  const handleFiles = (files) => {\n    for (let i = 0; i < files.length; i++) {\n      setSelectFiles((prevArray) => [...prevArray, files[i]]);\n    }\n  };\n\n  const fileDrop = (e) => {\n    e.preventDefault();\n    const files = e.dataTransfer.files;\n    if (files.length) {\n      handleFiles(files);\n    }\n  };\n\n  const fileSize = (size) => {\n    if (size === 0) {\n      return \"0 Bytes\";\n    }\n    const k = 1024;\n    const sizes = [\"Bytes\", \"KB\", \"MB\", \"GB\", \"TB\"];\n    const i = Math.floor(Math.log(size) / Math.log(k));\n    return parseFloat((size / Math.pow(k, i)).toFixed(2)) + \" \" + sizes[i];\n  };\n\n  const fileType = (fileName) => {\n    return (\n      fileName.substring(fileName.lastIndexOf(\".\") + 1, fileName.length) ||\n      fileName\n    );\n  };\n\n  const removeFile = (name) => {\n    const index = validFiles.findIndex((e) => e.name === name);\n    const index2 = selectFiles.findIndex((e) => e.name === name);\n    const index3 = unsupportedFiles.findIndex((e) => e.name === name);\n    validFiles.splice(index, 1);\n    selectFiles.splice(index2, 1);\n    setValidFiles([...validFiles]);\n    setSelectFiles([...selectFiles]);\n    if (index3 !== -1) {\n      unsupportedFiles.splice(index3, 1);\n      setUnsupportedFiles([...unsupportedFiles]);\n    }\n  };\n\n  useEffect(() => {\n    let filteredArray = selectFiles.reduce((file, current) => {\n      const x = file.find((item) => item.name === current.name);\n      if (!x) {\n        return file.concat([current]);\n      } else {\n        return file;\n      }\n    }, []);\n    setValidFiles([...filteredArray]);\n  }, [selectFiles]);\n\n  const fileInputClicked = () => {\n    fileInputRef.current.click();\n  };\n\n  const filesSelected = () => {\n    if (fileInputRef.current.files.length) {\n      handleFiles(fileInputRef.current.files);\n    }\n  };\n\n  const uploadFiles = () => {\n    uploadModalRef.current.style.display = \"block\";\n    uploadRef.current.innerHTML = \"File(s) Uploading...\";\n    for (let i = 0; i < validFiles.length; i++) {\n      const formData = new FormData();\n      formData.append(\"file\", validFiles[i]);\n      axios.post('//localhost:8000/upload', formData, {\n            onUploadProgress: (progressEvent) => {\n                const uploadPercentage = Math.floor((progressEvent.loaded / progressEvent.total) * 100);\n                progressRef.current.innerHTML = `${uploadPercentage}%`;\n                progressRef.current.style.width = `${uploadPercentage}%`;\n                if (uploadPercentage === 100) {\n                    uploadRef.current.innerHTML = 'File(s) Uploaded';\n                    validFiles.length = 0;\n                    setValidFiles([...validFiles]);\n                    setSelectFiles([...validFiles]);\n                    setUnsupportedFiles([...validFiles]);\n                    setTimeout(uploadModalRef.current.style.display = \"none\", 3000);\n                }\n            }\n        })\n      .then((e) => {\n        console.log('Success');\n      })\n      .catch((err) => {\n        console.log('Error', err)\n        uploadRef.current.innerHTML = `<span class=\"error\">Error Uploading File(s)</span>`;\n      })\n    }\n  };\n\n  return (\n    <div className=\"DropBox\">\n      {unsupportedFiles.length === 0 && validFiles.length ? (\n        <button className=\"DropBox-btn\" onClick={() => uploadFiles()}>\n          Upload\n        </button>\n      ) : (\n        \"\"\n      )}\n      {unsupportedFiles.length ? (\n        <p>Please remove all unsupported files.</p>\n      ) : (\n        \"\"\n      )}\n      <div\n        className=\"DropBox__container\"\n        onDragOver={dragOver}\n        onDragEnter={dragEnter}\n        onDragLeave={dragLeave}\n        onDrop={fileDrop}\n        onClick={fileInputClicked}\n      >\n        <div className=\"DropBox__container-message\">\n          <UploadIcon className=\"DropBox__container-message-icon\" />\n          <p>Drag & Drop files here or click to upload</p>\n        </div>\n        <input\n          ref={fileInputRef}\n          className=\"DropBox__container-input\"\n          type=\"file\"\n          multiple\n          onChange={filesSelected}\n        />\n      </div>\n      <div>\n        <div className=\"DropBox__file\">\n          {validFiles.map((data, i) => (\n            <div className=\"DropBox__file-status\" key={i}>\n              <div\n                onClick={\n                  !data.invalid\n                    ? () => openImageModal(data)\n                    : () => removeFile(data.name)\n                }\n              >\n                <div className=\"DropBox__file-type\">{fileType(data.name)}</div>\n                <span\n                  className={`DropBox__file-name ${\n                    data.invalid ? \"file-error\" : \"\"\n                  }`}\n                >\n                  {data.name}\n                </span>\n                <span className=\"DropBox__file-size\">\n                  ({fileSize(data.size)})\n                </span>\n                {data.invalid && (\n                  <span className=\"DropBox__file-error-message\">\n                    ({errorMessage})\n                  </span>\n                )}\n              </div>\n              <div\n                className=\"DropBox__file-remove\"\n                onClick={() => removeFile(data.name)}\n              >\n                X\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n      <div className=\"DropBox__upload-modal\" ref={uploadModalRef}>\n        <div className=\"DropBox__upload-overlay\"></div>\n        <div className=\"DropBox__upload-progress-container\">\n          <span ref={uploadRef}></span>\n          <div className=\"DropBox__progress\">\n            <div\n              className=\"DropBox__upload-progress-bar\"\n              ref={progressRef}\n            ></div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport FilesUploader from \"./components/FilesUploader/FilesUploader\";\nimport DropBox from \"./components/DropBox/DropBox\";\nimport \"./style.scss\";\n\nexport default function App() {\n  return (\n    <div>\n      <FilesUploader />\n      <DropBox />\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}